[文件]
{{context_files}}

目的是分析上述文件内容，并将其转化为美观漂亮的中文可视化网页作品集。请保持原文件的核心信息，但以更易读、可视化的方式呈现。

[用户的查询]
{{query}}

要求：

## 内容要求
- 保持原文件的核心信息，但以更易读、可视化的方式呈现
- 在页面底部添加作者信息区域，包含：
  * 作者姓名: [作者姓名]  
  * 社交媒体链接: 至少包含Twitter/X
- 版权信息和年份

## 设计风格
- 整体风格参考Linear App的简约现代设计
- 使用清晰的视觉层次结构，突出重要内容
- 配色方案应专业、和谐，适合长时间阅读

## 技术规范
- 使用HTML5、TailwindCSS 3.0+（通过CDN引入）和必要的JavaScript
- 实现完整的深色/浅色模式切换功能，默认跟随系统设置
- 代码结构清晰，包含适当注释，便于理解和维护

## 响应式设计
- 页面必须在所有设备上（手机、平板、桌面）完美展示
- 针对不同屏幕尺寸优化布局和字体大小
- 确保移动端有良好的触控体验

## 媒体资源
- 使用文档中的Markdown图片链接（如果有的话）
- 使用文档中的视频嵌入代码（如果有的话）

## 图标与视觉元素
- 使用专业图标库如Font Awesome或Material Icons（通过CDN引入）
- 根据内容主题选择合适的插图或图表展示数据
- 避免使用emoji作为主要图标

## 交互体验
- 添加适当的微交互效果提升用户体验：
  * 按钮悬停时有轻微放大和颜色变化
  * 卡片元素悬停时有精致的阴影和边框效果
  * 页面滚动时有平滑过渡效果
  * 内容区块加载时有优雅的淡入动画

## 性能优化
- 确保页面加载速度快，避免不必要的大型资源
- 实现懒加载技术用于长页面内容

## 页面结构要求
1. 生成一个高度可扩展的框架型HTML页面，包含以下元素：
   a. 页面标题和基本信息
   b. 动态导航区域，能随组件增加自动扩展
   c. 弹性主内容区域，能容纳无限组件（使用id标识的div容器）
   d. 组件目录或索引区域
   e. 页脚信息（包含作者信息和版权声明）

2. 框架页面应该包含：
   a. 响应式布局，适应不同设备和任意数量的组件
   b. 清晰的视觉层次结构
   c. 统一的样式主题和组件样式继承系统
   d. 使用锚点链接实现简单导航功能
   e. 静态展示组件的区域划分

3. 无限扩展的组件系统：
   a. 预设多个组件容器的HTML结构
   b. 组件容器应有统一的样式类和结构
   c. 组件区域应有明确的视觉边界和一致的样式

请生成完整的HTML代码，包括所有必要的CSS和JavaScript。这个框架必须设计为可以无限扩展组件的系统，确保即使添加大量组件也能保持良好的性能和用户体验。确保代码符合W3C标准，无错误警告，并在不同浏览器中保持一致的外观和功能。 